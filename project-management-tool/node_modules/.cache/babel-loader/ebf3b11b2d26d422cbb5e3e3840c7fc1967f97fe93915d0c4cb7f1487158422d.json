{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\pranay\\\\portfolio\\\\project\\\\projetc\\\\project-management-tool\\\\src\\\\pages\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectCard from '../../components/ProjectCard/ProjectCard';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProjectName, setNewProjectName] = useState('');\n\n  // Mock data for now\n  useEffect(() => {\n    const mockProjects = [{\n      id: 1,\n      name: 'Website Redesign',\n      tasks: [{\n        id: 1,\n        title: 'Create wireframes'\n      }],\n      members: ['John Doe', 'Jane Smith']\n    }, {\n      id: 2,\n      name: 'Mobile App Development',\n      tasks: [{\n        id: 1,\n        title: 'Design UI'\n      }],\n      members: ['Alice', 'Bob']\n    }];\n    setProjects(mockProjects);\n  }, []);\n  const handleCreateProject = () => {\n    if (newProjectName.trim()) {\n      const newProject = {\n        id: Date.now(),\n        name: newProjectName,\n        tasks: [],\n        members: []\n      };\n      setProjects([...projects, newProject]);\n      setNewProjectName('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-creation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New project name\",\n        value: newProjectName,\n        onChange: e => setNewProjectName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateProject,\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-grid\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"t83Fa2tBHQrfUEBTMsQCdA0X6PU=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","ProjectCard","jsxDEV","_jsxDEV","Dashboard","_s","projects","setProjects","newProjectName","setNewProjectName","mockProjects","id","name","tasks","title","members","handleCreateProject","trim","newProject","Date","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","project","_c","$RefreshReg$"],"sources":["C:/Users/prana/OneDrive/Desktop/pranay/portfolio/project/projetc/project-management-tool/src/pages/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProjectCard from '../../components/ProjectCard/ProjectCard';\r\nimport './Dashboard.css';\r\n\r\nexport default function Dashboard() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProjectName, setNewProjectName] = useState('');\r\n\r\n  // Mock data for now\r\n  useEffect(() => {\r\n    const mockProjects = [\r\n      {\r\n        id: 1,\r\n        name: 'Website Redesign',\r\n        tasks: [{ id: 1, title: 'Create wireframes' }],\r\n        members: ['John Doe', 'Jane Smith'],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Mobile App Development',\r\n        tasks: [{ id: 1, title: 'Design UI' }],\r\n        members: ['Alice', 'Bob'],\r\n      },\r\n    ];\r\n    setProjects(mockProjects);\r\n  }, []);\r\n\r\n  const handleCreateProject = () => {\r\n    if (newProjectName.trim()) {\r\n      const newProject = {\r\n        id: Date.now(),\r\n        name: newProjectName,\r\n        tasks: [],\r\n        members: [],\r\n      };\r\n      setProjects([...projects, newProject]);\r\n      setNewProjectName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Your Projects</h2>\r\n      <div className=\"project-creation\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"New project name\"\r\n          value={newProjectName}\r\n          onChange={(e) => setNewProjectName(e.target.value)}\r\n        />\r\n        <button onClick={handleCreateProject}>Create Project</button>\r\n      </div>\r\n      <div className=\"projects-grid\">\r\n        {projects.map((project) => (\r\n          <ProjectCard key={project.id} project={project} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}